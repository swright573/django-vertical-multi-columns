---
name: Lint/Test/Deploy
on:
  push:
    branches:
      - main, staging
  pull_request:
    branches:
      - main, staging
env:
  if [[ $GITHUB_REF == 'main' ]]; then
    echo "pswd=${{ secrets.PYPI_API_TOKEN }}" >> $GITHUB_ENV
  else
    echo "pswd=${{ secrets.TEST_PYPI_API_TOKEN }}" >> $GITHUB_ENV
  fi

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install Black
        run: pip install black
      - name: Run black check
        run: black --check .
      - name: If needed, commit black changes to the push/pull request
        if: failure()
        run: |
          black .
          git config --global user.name 'autoblack'
          git config --global user.email 'swright573@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup: Format Python code with Black"
          git push
      - name: Install isort
        run: pip install isort
      - name: Run isort check
        run: isort . --check
      - name: If needed, commit isort changes to the push/pull request
        if: failure()
        run: |
          isort .
          git config --global user.name 'autoisort'
          git config --global user.email 'swright573@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "fixup: Reorganize imports with isort"
          git push
  more_lint:
    needs: black
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Linters
      run: |
        pip install pylint flake8
    - name: Run Linters
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --statistics
        # See pyproject.toml for disabled pylint messages
        pylint vertical_multi_columns example_site tests
  test:
    needs: more_lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pytest/tox
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-django pytest-cov tox tox-gh-actions
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: |
          tox -r --verbose
  check_pypi_version_number_has_changed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install requests
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: check version number
        run: |
          python check_pypi_version.py "${{ env.pypi_url }}django-vertical-multi-columns/json"
  build_wheel:
    needs: check_pypi_version_number_has_changed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: prep_create_wheel
        run: |
          python -m pip install --upgrade pip
          python -m setup.py --sdist --bdist_wheel --outdir dist/
  publish_to_pypi:
    needs: build_wheel
    runs-on: ubuntu-latest
    name: Publish a Python distribution to PyPi
    steps:
      - name: publish
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ env.pswd }}
          if: github.ref == 'refs/heads/staging'
          repository_url: https://test.pypi.org/legacy/
          
          

